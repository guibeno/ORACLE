-- metas instituições
SELECT * FROM ATINGIMENTO;
SELECT * FROM GESTOR;
SELECT * FROM CATEGORIA;
SELECT * FROM META;
SELECT * FROM funcionario;

-- pesquisa
SELECT * FROM PARTICIPANTES1;
SELECT * FROM perguntas1;
SELECT * FROM PESQUISAS1;
SELECT * FROM PESQUISA_PERGUNTA1;
SELECT * FROM produtos1;
SELECT * FROM resposta1;



INSERT INTO funcionario (id_funcionario, nome,cargo,data_admissao,id_gestor)
VALUES (11, 'Carlos Souza','Analista',TO_DATE('01/06/2025', 'DD/MM/YYYY'),1);

INSERT INTO atingimento (
    id_atingimento,
    id_meta,
    id_funcionario,
    
    qtd_atingida,
    data_registro,
    nota,
    data_avaliacao
) VALUES (
    10,          
    30,             
    11,               
    35,               
    TO_DATE('01/06/2025', 'DD/MM/YYYY'),
    NULL,             
    TO_DATE('30/06/2025', 'DD/MM/YYYY') 
);



-- Ex 1: alterar quantidade vendida para zero
--- no where adicionamos a logica de zerar o atingimento depois da data de 29/01
CREATE OR REPLACE PROCEDURE alterar_qtd IS
BEGIN
    UPDATE atingimento
    SET qtd_atingida = 0
    WHERE data_registro > TO_DATE('29/01/25', 'DD/MM/YY');
END;

BEGIN
    alterar_qtd;
END;

-- Ex 2: 


CREATE OR REPLACE FUNCTION calcular_porcentagem_nota(p_nome_funcionario IN VARCHAR2) 
RETURN NUMBER IS
    m_qtd_prevista NUMBER;
    v_qtd_atingida NUMBER;
    v_porcentagem NUMBER;
BEGIN
    SELECT a.qtd_atingida
    INTO v_qtd_atingida
    FROM funcionario f
    JOIN atingimento a ON a.id_funcionario = f.id_funcionario
    WHERE f.nome = p_nome_funcionario;
    
    SELECT m.qtd_prevista
    INTO m_qtd_prevista
    FROM meta m
    JOIN atingimento a ON m.id_meta = a.id_meta
    JOIN funcionario f ON f.id_funcionario = a.id_funcionario
    WHERE f.nome = p_nome_funcionario;

     -- aqui salvei na variavel o calculo da porcentagem
    v_porcentagem := (v_qtd_atingida / m_qtd_prevista) * 100;
    
    -- se a porcentagem for suporior a 100 ele retorna 100
    IF v_porcentagem > 100 THEN
        RETURN 100;
    --- se nao retorna o resultado 
    ELSE
        RETURN v_porcentagem;
    END IF;

    RETURN v_porcentagem;
END;

BEGIN
    DBMS_OUTPUT.PUT_LINE('Nota percentual: ' || calcular_porcentagem_nota('Pedro Martins') || '%');
END;



----- ex 3
CREATE OR REPLACE PROCEDURE salvar_nota_funcionario(p_nome_funcionario IN VARCHAR2) IS
    v_nota   NUMBER;
    v_exists NUMBER;
BEGIN
    SELECT COUNT(*) INTO v_exists
    FROM funcionario
    WHERE nome = p_nome_funcionario;

    IF v_exists = 0 THEN
        DBMS_OUTPUT.PUT_LINE('Colaborador "' || p_nome_funcionario || '" não encontrado.');
        RETURN;
    END IF;

    BEGIN
        v_nota := calcular_porcentagem_nota(p_nome_funcionario);
    EXCEPTION
        WHEN OTHERS THEN
            DBMS_OUTPUT.PUT_LINE('Erro durante o cálculo da nota: ' || SQLERRM);
            RETURN;
    END;

    BEGIN
        UPDATE atingimento a
        SET a.nota = v_nota
        WHERE a.id_funcionario = (
            SELECT f.id_funcionario
            FROM funcionario f
            WHERE f.nome = p_nome_funcionario    
        );

        COMMIT;

        DBMS_OUTPUT.PUT_LINE('Nota de "' || p_nome_funcionario || '" salva com sucesso: ' || ROUND(v_nota, 2) || '%');
    EXCEPTION
        WHEN OTHERS THEN
            DBMS_OUTPUT.PUT_LINE('Erro ao atualizar a nota: ' || SQLERRM);
            ROLLBACK;
    END;

EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('Erro inesperado na procedure: ' || SQLERRM);
END salvar_nota_funcionario;
/

BEGIN
    salvar_nota_funcionario('carlos silva');
END;



----------Ex: 4 -- METAS


CREATE OR REPLACE PROCEDURE criar_backup_metas_mes IS
  v_nome_tabela VARCHAR2(30); 
  v_sql        VARCHAR2(1000); 
BEGIN

  v_nome_tabela := 'log_backup_' || TO_CHAR(SYSDATE, 'YYYYMM');

  v_sql := 'CREATE TABLE ' || v_nome_tabela || ' AS SELECT * FROM meta WHERE 1=0';


  EXECUTE IMMEDIATE v_sql;


  DBMS_OUTPUT.PUT_LINE('Tabela ' || v_nome_tabela || ' criada com sucesso.');
  
  v_sql := 'INSERT INTO ' || v_nome_tabela || ' SELECT * FROM meta';
  EXECUTE IMMEDIATE v_sql;
  
  DBMS_OUTPUT.PUT_LINE('Dados copiados com sucesso!!');
  
END;

BEGIN
  criar_backup_metas_mes;
END;

SELECT * FROM LOG_BACKUP_202506;

DROP TABLE LOG_BACKUP_202506;

